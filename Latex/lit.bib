@misc{bass2012software,
  title={Software Architecture in Practice. SEI Series in Soft. Eng},
  author={Bass, Len and Clements, Paul and Kazman, Rick},
  year={2012},
  publisher={Addison-Wesley Professional,}
}
@book{tilkov2015rest,
	title={REST und HTTP: Entwicklung und Integration nach dem Architekturstil des Web},
	author={Tilkov, S.},
	isbn={9783864901201},
	url={https://books.google.de/books?id=pJF-ngEACAAJ},
	year={2015},
	publisher={Dpunkt.Verlag GmbH}
}
@book{starke2015effektive,
	title={Effektive Softwarearchitekturen: Ein praktischer Leitfaden},
	author={Starke, Gernot},
	year={2015},
	publisher={Carl Hanser Verlag GmbH Co KG}
}
@InProceedings{RJ2021,
author="Reinhard, Tobias
and Jacobs, Bart",
editor="Silva, Alexandra
and Leino, K. Rustan M.",
title="Ghost Signals: Verifying Termination of Busy Waiting",
booktitle="Computer Aided Verification",
year="2021",
publisher="Springer International Publishing",
address="Cham",
pages="27--50",
abstract="Programs for multiprocessor machines commonly perform busy waiting for synchronization. We propose the first separation logic for modularly verifying termination of such programs under fair scheduling. Our logic requires the proof author to associate a ghost signal with each busy-waiting loop and allows such loops to iterate while their corresponding signal {\$}{\$}s{\$}{\$}s is not set. The proof author further has to define a well-founded order on signals and to prove that if the looping thread holds an obligation to set a signal {\$}{\$}s'{\$}{\$}s{\textasciiacutex}, then {\$}{\$}s'{\$}{\$}s{\textasciiacutex}  is ordered above {\$}{\$}s{\$}{\$}s. By using conventional shared state invariants to associate the state of ghost signals with the state of data structures, programs busy-waiting for arbitrary conditions over arbitrary data structures can be verified.",
isbn="978-3-030-81688-9"
}
